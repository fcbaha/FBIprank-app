const express = require('express');
const bodyParser = require('body-parser');
const path = require('path');
const nodemailer = require('nodemailer');

const app = express();

const YOUR_EMAIL = 'proviper054@gmail.com';
const YOUR_APP_PASSWORD = 'nkwpmlrbqcdzpcvf';

app.use(bodyParser.urlencoded({ extended: true }));
app.use(express.static('public'));

app.get('/', (req, res) => {
  res.sendFile(path.join(__dirname, 'views', 'index.html'));
});

app.post('/send', async (req, res) => {
  const { name, email } = req.body;

  const transporter = nodemailer.createTransport({
    service: 'gmail',
    auth: {
      user: YOUR_EMAIL,
      pass: YOUR_APP_PASSWORD
    }
  });

  const mailOptions = {
    from: `"–§–ë–† (–§–µ–π–∫–æ–≤–æ–µ –ë—é—Ä–æ –†–æ—Ñ–ª–æ–≤) üïµÔ∏è‚ôÇÔ∏è" <${YOUR_EMAIL}>`,
    to: email,
    subject: 'üö® –¢—ã –∑–∞—Å–≤–µ—Ç–∏–ª—Å—è –≤ –¥–µ–ª–µ ¬´–ö—Ç–æ —Ç—É—Ç –ª–æ—Ö?¬ª',
    html: `
      <h2>${name}, –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –¢—ã ‚Äî –≥–ª–∞–≤–Ω—ã–π –ø–æ–¥–æ–∑—Ä–µ–≤–∞–µ–º—ã–π.</h2>
      <p>–ù–∞—à–∏ —ç–∫—Å–ø–µ—Ä—Ç—ã (–¥–∞-–¥–∞, —Ç–µ —Å–∞–º—ã–µ, —á—Ç–æ –≤ –ø–æ–¥–≤–∞–ª–µ –º–∞–º–∫–∏–Ω–æ–≥–æ –¥–æ–º–∞) –ø—Ä–æ–≤–µ–ª–∏ –∞–Ω–∞–ª–∏–∑ —Ç–≤–æ–µ–π –∂–∏–∑–Ω–∏ –∏ –≤–æ—Ç –≤—ã–≤–æ–¥—ã:</p>
      <ul>
        <li><b>IQ —Ç–µ—Å—Ç:</b> "–û—à–∏–±–∫–∞ 404 ‚Äî –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"</li>
        <li><b>–°—Ç–∏–ª—å:</b> "–ú–µ—à–æ–∫ —Å –∫–æ—Å—Ç—è–º–∏ –≤ —Å–≤–µ—Ç–ª–æ–º"</li>
        <li><b>–ö–∞—Ä—å–µ—Ä–∞:</b> "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –≥—Ä—É–∑—á–∏–∫ –¥–∏–≤–∞–Ω–∞"</li>
      </ul>
      <p><i>P.S. –≠—Ç–æ —à—É—Ç–∫–∞üòè</i></p>
      <hr>
      <p style="color: gray;">–° —É–≤–∞–∂–µ–Ω–∏–µ–º, <br> –ö–æ–º–∏—Ç–µ—Ç –ø–æ –±–æ—Ä—å–±–µ —Å —Ç–≤–æ–µ–π —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é –≤ —Å–µ–±–µ</p>
    `,
    attachments: [
      {
        filename: '–¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ_—á—Ç–æ_—Ç—ã_–ª—É–∑–µ—Ä.jpg',
        path: path.join(__dirname, 'assets', 'hacked.jpg'),
        cid: 'dossier'
      }
    ]
};

  try {
    const info = await transporter.sendMail(mailOptions);
    console.log('‚úÖ –ü–∏—Å—å–º–æ —Å –≤–ª–æ–∂–µ–Ω–∏–µ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:', info.response);
    res.redirect('/');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞:', error);
    res.status(500).send('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞.');
  }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => console.log(`üöÄ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç: http://localhost:${PORT}`));
